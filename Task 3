//PRODUCT----------------------------------------------------------------------------------------
public class Product {
    private int id;
    private String name;
    private String category;
    private double price;
    private int stockQuantity;

    public Product(int id, String name, String category, double price, int stockQuantity) {
        this.id = id;
        this.name = name;
        this.category = category;
        this.price = price;
        this.stockQuantity = stockQuantity;
    }

    public int getId() { return id; }
    public void setId(int id) { this.id = id; }

    public String getName() { return name; }
    public void setName(String name) { this.name = name; }

    public String getCategory() { return category; }
    public void setCategory(String category) { this.category = category; }

    public double getPrice() { return price; }
    public void setPrice(double price) { this.price = price; }

    public int getStockQuantity() { return stockQuantity; }
    public void setStockQuantity(int stockQuantity) { this.stockQuantity = stockQuantity; }

    public void displayInfo() {
    System.out.println(
    "Product ID: " + id +
    ", Name: " + name +
    ", Category: " + category +
    ", Price: $" + price +
    ", Stock: " + stockQuantity);
    }
}

//CUSTOMER----------------------------------------------------------------------------------------
public class Customer {
    private int id;
    private String firstName;
    private String lastName;
    private String email;
    private boolean isLoyalCustomer;

    public Customer(int id, String firstName, String lastName, String email, boolean isLoyalCustomer) {
        this.id = id;
        this.firstName = firstName;
        this.lastName = lastName;
        this.email = email;
        this.isLoyalCustomer = isLoyalCustomer;
    }

    public int getId() { return id; }
    public void setId(int id) { this.id = id; }

    public String getFirstName() { return firstName; }
    public void setFirstName(String firstName) { this.firstName = firstName; }

    public String getLastName() { return lastName; }
    public void setLastName(String lastName) { this.lastName = lastName; }

    public String getEmail() { return email; }
    public void setEmail(String email) { this.email = email; }

    public boolean isLoyalCustomer() { return isLoyalCustomer; }
    public void setLoyalCustomer(boolean loyalCustomer) { isLoyalCustomer = loyalCustomer; }

    public void displayInfo() {
    System.out.println(
    "Customer ID: " + id +
    ", Name: " + firstName + " " + lastName +
    ", Email: " + email +
    ", Loyal Customer: " + isLoyalCustomer);
    }
}

//ORDER----------------------------------------------------------------------------------------
public class Order {
    private int id;
    private Customer customer;
    private Product[] products;
    private int[] quantities;
    private String orderDate;
    private String status;

    public Order(int id, Customer customer, Product[] products, int[] quantities, String orderDate, String status) {
        this.id = id;
        this.customer = customer;
        this.products = products;
        this.quantities = quantities;
        this.orderDate = orderDate;
        this.status = status;
    }

    public int getId() { return id; }
    public void setId(int id) { this.id = id; }

    public Customer getCustomer() { return customer; }
    public void setCustomer(Customer customer) { this.customer = customer; }

    public Product[] getProducts() { return products; }
    public void setProducts(Product[] products) { this.products = products; }

    public int[] getQuantities() { return quantities; }
    public void setQuantities(int[] quantities) { this.quantities = quantities; }

    public String getOrderDate() { return orderDate; }
    public void setOrderDate(String orderDate) { this.orderDate = orderDate; }

    public String getStatus() { return status; }
    public void setStatus(String status) { this.status = status; }

    public double calculateTotalValue() {
        double total = 0.0;
        for (int i = 0; i < products.length; i++) {
            total += products[i].getPrice() * quantities[i];
        }
        return total;
    }

    public void displayDetails() {
        System.out.println("Order ID: " + id + ", Date: " + orderDate + ", Status: " + status);
        customer.displayInfo();
        for (int i = 0; i < products.length; i++) {
            products[i].displayInfo();
            System.out.println("Quantity: " + quantities[i]);
        }
        System.out.println("Total Value: $" + calculateTotalValue());
    }
}

//COMPSTORE------------------------------------------------------------------------------------------------
public class ComputerStore {
    private Product[] products = new Product[100];
    private Customer[] customers = new Customer[100];
    private Order[] orders = new Order[100];
    private int productCount = 0;
    private int customerCount = 0;
    private int orderCount = 0;

    public void addProduct(Product product) {
        products[productCount++] = product;
    }

    public void addCustomer(Customer customer) {
        customers[customerCount++] = customer;
    }

    public void createOrder(Customer customer, Product[] productsOrdered, int[] quantities) {
        int orderId = orderCount + 1;
        Order order = new Order(orderId, customer, productsOrdered, quantities, java.time.LocalDate.now().toString(), "New");

        if (customer.isLoyalCustomer()) {
            double originalTotal = order.calculateTotalValue();
            double discount = originalTotal * 0.1;
            System.out.println("Loyal customer discount: -$" + discount);
        }

        orders[orderCount++] = order;
        updateStockAfterOrder(order);
        System.out.println("Order created successfully!");
    }

    public void updateStockAfterOrder(Order order) {
        Product[] products = order.getProducts();
        int[] quantities = order.getQuantities();

        for (int i = 0; i < products.length; i++) {
            int currentStock = products[i].getStockQuantity();
            products[i].setStockQuantity(currentStock - quantities[i]);
        }
    }

    public void changeOrderStatus(int orderId, String newStatus) {
        for (Order order : orders) {
            if (order != null && order.getId() == orderId) {
                order.setStatus(newStatus);
                System.out.println("Order status updated.");
                return;
            }
        }
        System.out.println("Order not found.");
    }

    public void displayProductsInCategory(String category) {
        for (int i = 0; i < productCount; i++) {
            if (products[i].getCategory().equalsIgnoreCase(category)) {
                products[i].displayInfo();
            }
        }
    }

    public void displayCustomerOrders(int customerId) {
        for (Order order : orders) {
            if (order != null && order.getCustomer().getId() == customerId) {
                order.displayDetails();
            }
        }
    }
}
